const params = new URLSearchParams(window.location.search);
const fileId = params.get("id");


//const params = new URLSearchParams(location.search);
const title = params.get("title");
//const id = params.get("id");
const poster = params.get("poster");
const category = params.get("category");
const description = params.get("description");

const videoFrame = document.getElementById("videoFrame");
const mediaTitle = document.getElementById("mediaTitle");
const mediaCategory = document.getElementById("mediaCategory");
const mediaPoster = document.getElementById("mediaPoster");
const mediaDescription = document.getElementById("mediaDescription");
const netStatus = document.getElementById("netStatus");
const pingResult = document.getElementById("pingResult");
const shareBtn = document.getElementById("shareBtn");
const shareLink = document.getElementById("shareLink");
const streamError = document.getElementById("streamError");
const pingChart = document.getElementById("pingChart");
const ctx = pingChart.getContext("2d");

let pingHistory = [];

if (!fileId) {
  document.body.innerHTML = "<p>‚ùå –û—à–∏–±–∫–∞: –º–µ–¥–∏–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ</p>";
} else {
  const url = `https://drive.google.com/file/d/${fileId}/preview`;
  videoFrame.src = url;

  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage
  const playlistRaw = localStorage.getItem("gdrive_playlist");
  if (playlistRaw) {
    try {
      const playlist = JSON.parse(playlistRaw);
      const media = playlist.find(item => item.id === fileId);

      if (media) {
        mediaTitle.textContent = media.title || "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è";
        mediaCategory.textContent = media.category || "–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏";
        mediaPoster.src = media.poster || `https://drive.google.com/thumbnail?id=${media.id}`;
        mediaDescription.textContent = media.description || "";
      } else {
        mediaTitle.textContent = "–ú–µ–¥–∏–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑–µ";
      }
    } catch (e) {
      console.warn("–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è localStorage:", e);
    }
  }

/*function getQueryParam(name) {
  const url = new URL(window.location.href);
  return url.searchParams.get(name);
}

const vk_oid = getQueryParam('vk_oid');
const vk_id = getQueryParam('vk_id');
const vk_hash = getQueryParam('vk_hash');
const fileId = getQueryParam('id'); // Google Drive ID

// –≠–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –∏–Ω—Ñ–æ–±–ª–æ–∫–∞
const mediaTitle = document.getElementById('mediaTitle');
const mediaCategory = document.getElementById('mediaCategory');
const mediaPoster = document.getElementById('mediaPoster');
const mediaDescription = document.getElementById('mediaDescription');
const playerContainer = document.getElementById('player-container');

// --- VK –≤–∏–¥–µ–æ ---
if (vk_oid && vk_id && vk_hash) {
  const vk_url = `https://vk.com/video_ext.php?oid=${vk_oid}&id=${vk_id}&hash=${vk_hash}`;
  playerContainer.innerHTML = `
    <iframe src="${vk_url}" width="720" height="420" frameborder="0" allowfullscreen allow="autoplay; encrypted-media"></iframe>
  `;

  // –ü–æ–ø—ã—Ç–∫–∞ –Ω–∞–π—Ç–∏ –∏ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –¥–æ–ø. –∏–Ω—Ñ—É –∏–∑ –ø–ª–µ–π–ª–∏—Å—Ç–∞
  const playlistRaw = localStorage.getItem("gdrive_playlist");
  if (playlistRaw) {
    try {
      const playlist = JSON.parse(playlistRaw);
      // –ù–∞–π—Ç–∏ –ø–æ vk_oid/vk_id/vk_hash
      const media = playlist.find(item => 
        item.vk_oid === vk_oid && item.vk_id === vk_id && item.vk_hash === vk_hash
      );
      if (media) {
        mediaTitle.textContent = media.title || "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è";
        mediaCategory.textContent = media.category || "–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏";
        mediaPoster.src = media.poster || "https://vk.com/images/video_placeholder.png";
        mediaDescription.textContent = media.description || "";
      } else {
        mediaTitle.textContent = "VK-–≤–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑–µ";
      }
    } catch (e) {
      console.warn("–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è localStorage:", e);
    }
  }
}
// --- Google Drive –≤–∏–¥–µ–æ ---
else if (fileId) {
  const url = `https://drive.google.com/file/d/${fileId}/preview`;
  playerContainer.innerHTML = `<iframe src="${url}" width="720" height="420" frameborder="0" allowfullscreen></iframe>`;

  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage
  const playlistRaw = localStorage.getItem("gdrive_playlist");
  if (playlistRaw) {
    try {
      const playlist = JSON.parse(playlistRaw);
      const media = playlist.find(item => item.id === fileId);

      if (media) {
        mediaTitle.textContent = media.title || "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è";
        mediaCategory.textContent = media.category || "–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏";
        mediaPoster.src = media.poster || `https://drive.google.com/thumbnail?id=${media.id}`;
        mediaDescription.textContent = media.description || "";
      } else {
        mediaTitle.textContent = "–ú–µ–¥–∏–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑–µ";
      }
    } catch (e) {
      console.warn("–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è localStorage:", e);
    }
  }
} else {
  document.body.innerHTML = "<p>‚ùå –û—à–∏–±–∫–∞: –º–µ–¥–∏–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ</p>";
}*/

  
/* // –ö–Ω–æ–ø–∫–∞ "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è"
const fullLink = `${location.origin}${location.pathname}?id=${fileId}`;
shareBtn.addEventListener("click", () => {
  // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ (–µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å)
  const title = mediaTitle.textContent || "–í–∏–¥–µ–æ";
  // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
  const shareText = `üé¨ –°–º–æ—Ç—Ä–∏ –æ—Ç Berlandbor: ${title}\n${fullLink}`;
  navigator.clipboard.writeText(shareText).then(() => {
    shareLink.textContent = `–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞: ${title}, —Ç–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø–æ–¥–µ–ª–∏—Ç—Å—è!`;
  });
});*/

const fullLink = `${location.origin}${location.pathname}?id=${fileId}`;

/*shareBtn.addEventListener("click", () => {
  const params = new URLSearchParams({
    title: mediaTitle.textContent || "–í–∏–¥–µ–æ",
    id: fileId,
    poster: mediaPoster.src || "",
    category: mediaCategory.textContent || "",
    description: mediaDescription.textContent || ""
  });
  const fullLink = `${location.origin}${location.pathname}?${params.toString()}`;
  const shareText = `üé¨ –°–º–æ—Ç—Ä–∏ –æ—Ç Berlandbor: ${mediaTitle.textContent}\n${fullLink}`;
  navigator.clipboard.writeText(shareText).then(() => {
    shareLink.textContent = `–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞: ${mediaTitle.textContent}. - –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è!`;
  });
});*/

shareBtn.addEventListener("click", () => {
  const params = new URLSearchParams({
    title: mediaTitle.textContent || "–í–∏–¥–µ–æ",
    id: fileId,
    poster: mediaPoster.src || "",
    category: mediaCategory.textContent || "",
    description: /*mediaDescription.textContent ||*/ "üòÄ"
  });
  const fullLink = `${location.origin}${location.pathname}?${params.toString()}`;

  // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å—Ç–µ—Ä –≤ —Ç–µ–∫—Å—Ç
  const posterLine = mediaPoster.src ? `–ü–æ—Å—Ç–µ—Ä: ${mediaPoster.src}\n` : '';

  const shareText = `üé¨ –°–º–æ—Ç—Ä–∏ –æ—Ç Berlandbor: ${mediaTitle.textContent}\n${fullLink}\n${posterLine}`;
  navigator.clipboard.writeText(shareText).then(() => {
    shareLink.textContent = `–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞: ${mediaTitle.textContent}. - –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è!`;
  });
});

/*shareBtn.onclick = function() {
  // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ —Å—Å—ã–ª–∫–µ
  const params = new URLSearchParams({
    title: mediaTitle.textContent || "–í–∏–¥–µ–æ",
    poster: mediaPoster.src || "",
    category: mediaCategory.textContent || ""
  });
  const fullLink = `${location.origin}${location.pathname}?${params.toString()}`;

  // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è —à–∞—Ä–∏–Ω–≥–∞ (–æ–ø–∏—Å–∞–Ω–∏–µ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ —Å—é–¥–∞)
  let text = '';
  const title = mediaTitle.textContent || '';
  const cat = mediaCategory.textContent || '';
  const desc = mediaDescription.textContent || '';
  const poster = mediaPoster.src || '';

  if (title) text += `üé¨ ${title}\n`;
  if (cat) text += `–ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${cat}\n`;
  if (desc) text += `${desc}\n`;
  if (poster) text += `–ü–æ—Å—Ç–µ—Ä: ${poster}\n`;
  text += `–°–º–æ—Ç—Ä–µ—Ç—å: ${fullLink}`;

  // Web Share API –¥–ª—è —Å–º–∞—Ä—Ç—Ñ–æ–Ω–æ–≤
  if (navigator.share) {
    navigator.share({
      title: title,
      text: text,
      url: fullLink
    }).catch(() => {});
  } else { // –î–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞ ‚Äî –∫–æ–ø–∏—Ä—É–µ–º –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
    navigator.clipboard.writeText(text).then(() => {
      alert('–°—Å—ã–ª–∫–∞ –∏ –¥–∞–Ω–Ω—ã–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã! –ú–æ–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å –≤ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä.');
    });
  }
};*/



  // –ü–∏–Ω–≥ –¥–æ Google
  async function pingGoogle() {
    const start = performance.now();
    try {
      await fetch("https://www.google.com/favicon.ico", { mode: "no-cors" });
      const latency = Math.round(performance.now() - start);
      pingResult.textContent = latency;
      netStatus.textContent = "üü¢ –û–Ω–ª–∞–π–Ω";

      pingHistory.push(latency);
      if (pingHistory.length > 50) pingHistory.shift();
      drawPingChart();
    } catch {
      netStatus.textContent = "üî¥ –ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–µ—Ç—å—é";
      pingResult.textContent = "‚Äì";

      pingHistory.push(100);
      if (pingHistory.length > 50) pingHistory.shift();
      drawPingChart();
    }
  }

  function drawPingChart() {
    ctx.clearRect(0, 0, pingChart.width, pingChart.height);
    ctx.beginPath();
    pingHistory.forEach((val, i) => {
      const x = (i / pingHistory.length) * pingChart.width;
      const y = pingChart.height - Math.min(val, 200) / 2; // –º–∞—Å—à—Ç–∞–±
      if (i === 0) ctx.moveTo(x, y);
      else ctx.lineTo(x, y);
    });
    ctx.strokeStyle = "#00ff00";
    ctx.stroke();
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Ç–æ–∫–∞
  function monitorIframeLoad() {
    setTimeout(() => {
      try {
        const doc = videoFrame.contentDocument || videoFrame.contentWindow?.document;
        const bodyText = doc?.body?.innerText || "";
        if (bodyText.toLowerCase().includes("exceeded") || bodyText.length < 30) {
          streamError.style.display = "block";
        }
      } catch (e) {
        // –ë—Ä–∞—É–∑–µ—Ä –±–ª–æ–∫–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø –∫ iframe —Å –¥—Ä—É–≥–æ–≥–æ –¥–æ–º–µ–Ω–∞ ‚Äî –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
        console.warn("iframe cross-origin –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞:", e);
      }
    }, 7000);
  }

  // –ó–∞–ø—É—Å–∫
  setInterval(pingGoogle, 1000);
  pingGoogle();
  monitorIframeLoad();
}
